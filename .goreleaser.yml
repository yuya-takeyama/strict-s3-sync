version: 2

before:
  hooks:
    - go mod tidy
    - go generate ./...

builds:
  - id: strict-s3-sync
    main: ./cmd/strict-s3-sync
    binary: strict-s3-sync
    env:
      - CGO_ENABLED=0
    goos:
      - linux
      - windows
      - darwin
    goarch:
      - amd64
      - arm64
      - "386"
    ignore:
      - goos: darwin
        goarch: "386"
      - goos: windows
        goarch: arm64
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.Commit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser

archives:
  - id: default
    name_template: >-
      {{ .ProjectName }}_
      {{- title .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    format_overrides:
      - goos: windows
        formats: [zip]

checksum:
  name_template: "{{ .ProjectName }}_{{ .Version }}_checksums.txt"
  algorithm: sha256

signs:
  - cmd: cosign
    env:
      - COSIGN_EXPERIMENTAL=1
    certificate: "${artifact}.pem"
    args:
      - sign-blob
      - "--output-certificate=${certificate}"
      - "--output-signature=${signature}"
      - "${artifact}"
      - "--yes"
    artifacts: checksum
    output: true

sboms:
  - artifacts: archive
    documents:
      - "${artifact}.sbom.json"

release:
  github:
    owner: yuya-takeyama
    name: strict-s3-sync
  draft: false
  prerelease: auto
  mode: append
  footer: |
    ## Installation

    ### Using aqua
    ```bash
    aqua g -i yuya-takeyama/strict-s3-sync
    ```

    ### Using go install
    ```bash
    go install github.com/yuya-takeyama/strict-s3-sync/cmd/strict-s3-sync@latest
    ```

    ### Binary download
    Download the appropriate binary for your platform from the assets below.

changelog:
  use: github
  sort: asc
  filters:
    exclude:
      - "^docs:"
      - "^test:"
      - "^chore:"
